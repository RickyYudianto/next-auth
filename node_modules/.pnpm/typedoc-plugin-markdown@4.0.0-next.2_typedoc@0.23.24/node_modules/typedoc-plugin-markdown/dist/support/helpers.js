"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTagName = exports.getFlags = exports.getTypeParameters = exports.getReflectionTitle = exports.getMemberHeadingLevel = exports.getReflectionHeadingLevel = exports.getGroupHeadingLevel = exports.getIndexHeadingLevel = exports.isConstructor = void 0;
const typedoc_1 = require("typedoc");
const els_1 = require("./els");
const utils_1 = require("./utils");
const isConstructor = (signature) => {
    var _a;
    return (_a = signature.parent) === null || _a === void 0 ? void 0 : _a.kindOf(typedoc_1.ReflectionKind.Constructor);
};
exports.isConstructor = isConstructor;
function getIndexHeadingLevel(reflection) {
    if (reflection.kindOf([
        typedoc_1.ReflectionKind.Project,
        typedoc_1.ReflectionKind.Module,
        typedoc_1.ReflectionKind.Namespace,
    ]) ||
        reflection.hasOwnDocument) {
        return 2;
    }
    return 4;
}
exports.getIndexHeadingLevel = getIndexHeadingLevel;
function getGroupHeadingLevel(container) {
    if (container.kindOf(typedoc_1.ReflectionKind.Project)) {
        return 2;
    }
    return container.hasOwnDocument ? 2 : 4;
}
exports.getGroupHeadingLevel = getGroupHeadingLevel;
function getReflectionHeadingLevel(reflection) {
    var _a, _b, _c;
    if (reflection.hasOwnDocument) {
        return 1;
    }
    if ((_a = reflection === null || reflection === void 0 ? void 0 : reflection.parent) === null || _a === void 0 ? void 0 : _a.kindOf(typedoc_1.ReflectionKind.Project)) {
        return 3;
    }
    if (reflection.kindOf(typedoc_1.ReflectionKind.Constructor)) {
        return ((_b = reflection.parent) === null || _b === void 0 ? void 0 : _b.hasOwnDocument) ? 2 : 4;
    }
    return ((_c = reflection.parent) === null || _c === void 0 ? void 0 : _c.hasOwnDocument) ? 3 : 5;
}
exports.getReflectionHeadingLevel = getReflectionHeadingLevel;
function getMemberHeadingLevel(reflection) {
    return getReflectionHeadingLevel(reflection) + 1;
}
exports.getMemberHeadingLevel = getMemberHeadingLevel;
function getReflectionTitle(reflection, fullname = false) {
    var _a;
    const md = [
        (0, utils_1.escapeChars)(fullname ? reflection.getFullName() : reflection.name),
    ];
    if ((_a = reflection.signatures) === null || _a === void 0 ? void 0 : _a.length) {
        md.push('()');
    }
    md.push(getTypeParameters(reflection));
    return md.join('');
}
exports.getReflectionTitle = getReflectionTitle;
function getTypeParameters(reflection) {
    if (reflection.typeParameters) {
        const typeParameters = reflection.typeParameters
            .map((typeParameter) => typeParameter.name)
            .join(', ');
        return `\\<${typeParameters}\\>`;
    }
    return '';
}
exports.getTypeParameters = getTypeParameters;
function getFlags(reflection) {
    var _a;
    if (((_a = reflection.flags) === null || _a === void 0 ? void 0 : _a.length) > 0 && !reflection.flags.isRest) {
        return reflection.flags.map((flag) => (0, els_1.backTicks)(flag)).join(' ');
    }
    return null;
}
exports.getFlags = getFlags;
function getTagName(tag) {
    return tag.tag.substring(1);
}
exports.getTagName = getTagName;
