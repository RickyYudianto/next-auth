// src/node-fetch.ts
import * as nodeFetch from "node-fetch-native";
import { Readable } from "stream";
function install() {
  function define(name) {
    if (!globalThis[name]) {
      Object.defineProperty(globalThis, name, {
        value: nodeFetch[name],
        writable: false,
        configurable: true
      });
    }
  }
  define("fetch");
  define("AbortController");
  define("Blob");
  define("File");
  define("FormData");
  define("Headers");
  define("Request");
  if (globalThis.Response)
    return;
  class Response2 extends nodeFetch.Response {
    constructor(input, init) {
      if (input instanceof ReadableStream) {
        input = Readable.from(input);
      }
      super(input, init);
    }
  }
  globalThis.Response = Response2;
}
export {
  install as default
};
