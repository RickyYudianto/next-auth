"use strict";
// Copyright Fauna, Inc.
// SPDX-License-Identifier: MIT-0
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var prompts = require('prompts');
var init_1 = __importDefault(require("./init"));
var state_1 = __importDefault(require("./state"));
var migrate_1 = __importDefault(require("./migrate"));
var rollback_1 = __importDefault(require("./rollback"));
var apply_1 = __importDefault(require("./apply"));
var shell_1 = require("../interactive-shell/shell");
var run = function () { return __awaiter(void 0, void 0, void 0, function () {
    var response, _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                (0, shell_1.printHeader)();
                if (process.env.FAUNA_LEGACY) {
                    console.warn('FAUNA_LEGACY, is not supported for the run task, ignoring the variable.');
                }
                return [4 /*yield*/, prompts({
                        type: 'select',
                        name: 'value',
                        message: 'Please choose an option',
                        choices: [
                            { title: 'init', description: 'Initializing folders and config', value: 'INIT' },
                            { title: 'state', description: 'Get the current state of cloud and local migrations', value: 'STATE' },
                            { title: 'generate', description: 'Generate migration from your resources', value: 'GENERATE' },
                            { title: 'rollback', description: 'Rollback applied migrations in the database', value: 'ROLLBACK' },
                            { title: 'apply', description: 'Apply unapplied migrations against the database', value: 'APPLY' },
                        ]
                    })];
            case 1:
                response = _b.sent();
                _a = response.value;
                switch (_a) {
                    case 'INIT': return [3 /*break*/, 2];
                    case 'STATE': return [3 /*break*/, 4];
                    case 'GENERATE': return [3 /*break*/, 6];
                    case 'ROLLBACK': return [3 /*break*/, 8];
                    case 'APPLY': return [3 /*break*/, 9];
                }
                return [3 /*break*/, 11];
            case 2: return [4 /*yield*/, (0, init_1.default)()];
            case 3:
                _b.sent();
                return [3 /*break*/, 12];
            case 4: return [4 /*yield*/, (0, state_1.default)()];
            case 5:
                _b.sent();
                return [3 /*break*/, 12];
            case 6: return [4 /*yield*/, (0, migrate_1.default)()];
            case 7:
                _b.sent();
                return [3 /*break*/, 12];
            case 8:
                (0, rollback_1.default)();
                return [3 /*break*/, 12];
            case 9: return [4 /*yield*/, (0, apply_1.default)()];
            case 10:
                _b.sent();
                return [3 /*break*/, 12];
            case 11: return [3 /*break*/, 12];
            case 12: return [2 /*return*/];
        }
    });
}); };
exports.default = run;
